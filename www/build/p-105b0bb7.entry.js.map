{"version":3,"names":["formFieldCss","FormField","label","name","type","value","required","placeholder","minlength","maxlength","pattern","error","options","valid","touched","showError","valueChanged","errorTimer","handleInput","event","input","target","this","checkValidity","emit","clearTimeout","setTimeout","handleBlur","render","h","key","class","htmlFor","id","onInput","onBlur","invalid","map","option","style","visibility","src","alt","appendToMap","propName","items","get","set","includes","push","debounce","fn","ms","timeoutId","args","isConnected","maybeElement","cleanupElements","keys","filter","stencilSubscription","getRenderingRef","elmsToUpdate","Map","dispose","clear","elm","elements","forceUpdate","reset","forEach","elms","unwrap","val","createObservableMap","defaultState","shouldUpdate","a","b","unwrappedState","states","Object","entries","handlers","cb","oldValue","state","Proxy","_","ownKeys","Array","from","getOwnPropertyDescriptor","enumerable","configurable","has","on","eventName","callback","removeFromArray","onChange","unSet","newValue","unReset","use","subscriptions","unsubs","reduce","subscription","unsub","array","item","index","indexOf","length","createStore","data","stepStatus","currentStep","formDataStore","setField","getAllFields","setStepStatus","step","status","findIndex","s","getStepStatus","find","getAllStepStatus","setCurrentStep","getCurrentStep","formNavigationCss","FormNavigation","maxStep","disableNext","onSubmit","goToStep","isLastStep","onClick","disabled","formStepCss","FormStep","handleValueChanged","detail","child","el","querySelector","shadowRoot","focus","formStepperCss","stepFieldsMap","FormStepper","validationStatus","formData","submitted","handleFieldChange","handleSubmit","isCurrentStepValid","requiredFields","every","inputmode","stepperStatusCss","StepperStatus","steps","stepLabels","stepTimes","stepClass"],"sources":["src/components/form-field/form-field.css?tag=form-field&encapsulation=shadow","src/components/form-field/form-field.tsx","node_modules/@stencil/store/dist/index.js","src/store/store-form-data.ts","src/components/form-navigation/form-navigation.css?tag=form-navigation&encapsulation=shadow","src/components/form-navigation/form-navigation.tsx","src/components/form-step/form-step.css?tag=form-step&encapsulation=shadow","src/components/form-step/form-step.tsx","src/components/form-stepper/form-stepper.css?tag=form-stepper&encapsulation=shadow","src/components/form-stepper/form-stepper.tsx","src/components/stepper-status/stepper-status.css?tag=stepper-status&encapsulation=shadow","src/components/stepper-status/stepper-status.tsx"],"sourcesContent":[":host {\n  display: block;\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n\n  /* Variables */\n  --font-size-base: 1.125rem;\n  --line-height-base: 1.625rem;\n  --font-size-small: 0.875rem;\n  --line-height-small: 1.125rem;\n  --input-select-border: 1px solid #007bc7;\n}\n\n* {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n}\n\n.form-field {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1rem;\n}\n\nlabel {\n  font-size: var(--font-size-base);\n  line-height: var(--line-height-base);\n}\n\n.required {\n  color: #e73629;\n  margin-left: 0.25rem;\n}\n\ninput,\nselect {\n  font-size: 1rem;\n  border: 1px solid #999999;\n  width: 18rem;\n  height: 44px;\n  box-sizing: border-box;\n  appearance: none; /* Remove default styling for select */\n  margin: 0.25rem 0 0.25rem 0;\n  outline: none;\n}\n\ninput {\n  padding: 0.5rem 1rem; /* Top, Right, Bottom, Left padding */\n  transition-duration: 0.15s;\n}\n\nselect {\n  padding: 0rem 1rem; /* Top, Right, Bottom, Left padding */\n}\n\nselect:hover {\n  cursor: pointer; /* Change cursor to pointer on hover */\n}\n\n/* Border wordt zwart bij hover, behalve als het veld ook focus heeft */\ninput:hover:not(:focus),\nselect:hover:not(:focus) {\n  border: 1px solid black;\n}\n\n/* Border wordt blauw bij focus */\ninput:focus,\nselect:focus {\n  border: var(--input-select-border);\n  border-radius: 0;\n}\n\ninput.invalid + .error,\nselect.invalid + .error {\n  visibility: visible;\n}\n\n.error {\n  font-size: var(--font-size-small);\n  line-height: var(--line-height-small);\n  visibility: hidden;\n  display: flex;\n  align-items: center;\n  gap: 0.25rem;\n}\n","import { Component, Prop, h, Event, EventEmitter, State } from '@stencil/core';\n\n@Component({\n  tag: 'form-field',\n  styleUrl: 'form-field.css',\n  shadow: true,\n})\nexport class FormField {\n  // Label voor het veld\n  @Prop() label?: string;\n  // Naam van het veld (verplicht)\n  @Prop() name!: string;\n  // Type veld (bijv. tekst of select)\n  @Prop() type: string = 'text';\n  // Standaardwaarde\n  @Prop() value?: string = '';\n  // Of het veld verplicht is\n  @Prop() required?: boolean;\n  // Placeholder tekst\n  @Prop() placeholder?: string;\n  // Minimale lengte\n  @Prop() minlength?: number;\n  // Maximale lengte\n  @Prop() maxlength?: number;\n  // Validatiepatroon\n  @Prop() pattern?: string;\n  // Foutmelding\n  @Prop() error: string;\n  // Opties voor select-velden\n  @Prop() options?: { value: string; label: string }[];\n\n  // Houdt bij of het veld geldig is\n  @State() valid: boolean = true;\n  // Houdt bij of het veld is aangeraakt\n  @State() touched: boolean = false;\n  @State() showError: boolean = false;\n\n  // EventEmitter om wijzigingen in veldwaarden door te geven aan de parent component\n  @Event() valueChanged: EventEmitter<{ name: string; value: string; valid: boolean }>;\n\n  // Timer voor error-delay\n  private errorTimer: ReturnType<typeof setTimeout>;\n\n  // Directe validatie bij input\n  private handleInput = (event: Event) => {\n    const input = event.target as HTMLInputElement | HTMLSelectElement;\n    const value = input.value;\n    this.touched = true;\n\n    // Input validatie\n    this.valid = input.checkValidity();\n    this.valueChanged.emit({ name: this.name, value, valid: this.valid });\n\n    // Reset error-timer\n    clearTimeout(this.errorTimer);\n    // Alleen error tonen als ongeldig en touched\n    if (!this.valid && this.touched) {\n      this.errorTimer = setTimeout(() => {\n        this.showError = true;\n      }, 250);\n    } else {\n      this.showError = false;\n    }\n  };\n\n  // Markeert het veld als aangeraakt bij verlies van focus\n  private handleBlur = () => {\n    this.touched = true;\n    // Bij blur: error direct tonen als ongeldig\n    if (!this.valid) {\n      this.showError = true;\n    }\n  };\n\n  render() {\n    return (\n      <div class=\"form-field\">\n        {/* Label voor het veld */}\n        {this.label && (\n          <label htmlFor={this.name}>\n            {this.label}\n            {this.required}\n          </label>\n        )}\n        {/* Render een select of input afhankelijk van het type */}\n        {this.type === 'select' ? (\n          <select id={this.name} name={this.name} required={this.required} onInput={this.handleInput} onBlur={this.handleBlur} class={{ invalid: !this.valid && this.touched }}>\n            {this.options?.map(option => (\n              <option value={option.value}>{option.label}</option>\n            ))}\n          </select>\n        ) : (\n          <input\n            id={this.name}\n            name={this.name}\n            type={this.type}\n            value={this.value}\n            required={this.required}\n            placeholder={this.placeholder}\n            minlength={this.minlength}\n            maxlength={this.maxlength}\n            pattern={this.pattern}\n            onInput={this.handleInput}\n            onBlur={this.handleBlur}\n            class={{ invalid: !this.valid && this.touched }}\n          />\n        )}\n        {/* Error pas tonen na delay */}\n        <p class=\"error\" style={{ visibility: this.showError ? 'visible' : 'hidden' }}>\n          <img src=\"assets/Notification-icons.svg\" alt=\"error-icon\" />\n          <span>{this.error}</span>\n        </p>\n      </div>\n    );\n  }\n}\n","import { getRenderingRef, forceUpdate } from '@stencil/core';\n\nconst appendToMap = (map, propName, value) => {\n    const items = map.get(propName);\n    if (!items) {\n        map.set(propName, [value]);\n    }\n    else if (!items.includes(value)) {\n        items.push(value);\n    }\n};\nconst debounce = (fn, ms) => {\n    let timeoutId;\n    return (...args) => {\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(() => {\n            timeoutId = 0;\n            fn(...args);\n        }, ms);\n    };\n};\n\n/**\n * Check if a possible element isConnected.\n * The property might not be there, so we check for it.\n *\n * We want it to return true if isConnected is not a property,\n * otherwise we would remove these elements and would not update.\n *\n * Better leak in Edge than to be useless.\n */\nconst isConnected = (maybeElement) => !('isConnected' in maybeElement) || maybeElement.isConnected;\nconst cleanupElements = debounce((map) => {\n    for (let key of map.keys()) {\n        map.set(key, map.get(key).filter(isConnected));\n    }\n}, 2_000);\nconst stencilSubscription = () => {\n    if (typeof getRenderingRef !== 'function') {\n        // If we are not in a stencil project, we do nothing.\n        // This function is not really exported by @stencil/core.\n        return {};\n    }\n    const elmsToUpdate = new Map();\n    return {\n        dispose: () => elmsToUpdate.clear(),\n        get: (propName) => {\n            const elm = getRenderingRef();\n            if (elm) {\n                appendToMap(elmsToUpdate, propName, elm);\n            }\n        },\n        set: (propName) => {\n            const elements = elmsToUpdate.get(propName);\n            if (elements) {\n                elmsToUpdate.set(propName, elements.filter(forceUpdate));\n            }\n            cleanupElements(elmsToUpdate);\n        },\n        reset: () => {\n            elmsToUpdate.forEach((elms) => elms.forEach(forceUpdate));\n            cleanupElements(elmsToUpdate);\n        },\n    };\n};\n\nconst unwrap = (val) => (typeof val === 'function' ? val() : val);\nconst createObservableMap = (defaultState, shouldUpdate = (a, b) => a !== b) => {\n    const unwrappedState = unwrap(defaultState);\n    let states = new Map(Object.entries(unwrappedState ?? {}));\n    const handlers = {\n        dispose: [],\n        get: [],\n        set: [],\n        reset: [],\n    };\n    const reset = () => {\n        // When resetting the state, the default state may be a function - unwrap it to invoke it.\n        // otherwise, the state won't be properly reset\n        states = new Map(Object.entries(unwrap(defaultState) ?? {}));\n        handlers.reset.forEach((cb) => cb());\n    };\n    const dispose = () => {\n        // Call first dispose as resetting the state would\n        // cause less updates ;)\n        handlers.dispose.forEach((cb) => cb());\n        reset();\n    };\n    const get = (propName) => {\n        handlers.get.forEach((cb) => cb(propName));\n        return states.get(propName);\n    };\n    const set = (propName, value) => {\n        const oldValue = states.get(propName);\n        if (shouldUpdate(value, oldValue, propName)) {\n            states.set(propName, value);\n            handlers.set.forEach((cb) => cb(propName, value, oldValue));\n        }\n    };\n    const state = (typeof Proxy === 'undefined'\n        ? {}\n        : new Proxy(unwrappedState, {\n            get(_, propName) {\n                return get(propName);\n            },\n            ownKeys(_) {\n                return Array.from(states.keys());\n            },\n            getOwnPropertyDescriptor() {\n                return {\n                    enumerable: true,\n                    configurable: true,\n                };\n            },\n            has(_, propName) {\n                return states.has(propName);\n            },\n            set(_, propName, value) {\n                set(propName, value);\n                return true;\n            },\n        }));\n    const on = (eventName, callback) => {\n        handlers[eventName].push(callback);\n        return () => {\n            removeFromArray(handlers[eventName], callback);\n        };\n    };\n    const onChange = (propName, cb) => {\n        const unSet = on('set', (key, newValue) => {\n            if (key === propName) {\n                cb(newValue);\n            }\n        });\n        // We need to unwrap the defaultState because it might be a function.\n        // Otherwise we might not be sending the right reset value.\n        const unReset = on('reset', () => cb(unwrap(defaultState)[propName]));\n        return () => {\n            unSet();\n            unReset();\n        };\n    };\n    const use = (...subscriptions) => {\n        const unsubs = subscriptions.reduce((unsubs, subscription) => {\n            if (subscription.set) {\n                unsubs.push(on('set', subscription.set));\n            }\n            if (subscription.get) {\n                unsubs.push(on('get', subscription.get));\n            }\n            if (subscription.reset) {\n                unsubs.push(on('reset', subscription.reset));\n            }\n            if (subscription.dispose) {\n                unsubs.push(on('dispose', subscription.dispose));\n            }\n            return unsubs;\n        }, []);\n        return () => unsubs.forEach((unsub) => unsub());\n    };\n    const forceUpdate = (key) => {\n        const oldValue = states.get(key);\n        handlers.set.forEach((cb) => cb(key, oldValue, oldValue));\n    };\n    return {\n        state,\n        get,\n        set,\n        on,\n        onChange,\n        use,\n        dispose,\n        reset,\n        forceUpdate,\n    };\n};\nconst removeFromArray = (array, item) => {\n    const index = array.indexOf(item);\n    if (index >= 0) {\n        array[index] = array[array.length - 1];\n        array.length--;\n    }\n};\n\nconst createStore = (defaultState, shouldUpdate) => {\n    const map = createObservableMap(defaultState, shouldUpdate);\n    map.use(stencilSubscription());\n    return map;\n};\n\nexport { createObservableMap, createStore };\n","import { createStore } from '@stencil/store';\n\n// Mogelijke statuswaarden voor een stap\ntype StepStatus = 'inactive' | 'active' | 'completed';\n\n// Mapping van stap naar status\ninterface StepStatusMap {\n  step: number;\n  status: StepStatus;\n}\n\n// Globale store voor formulierdata en stappen\nconst { state } = createStore({\n  data: {} as { [key: string]: string },\n  stepStatus: [] as StepStatusMap[],\n  currentStep: 0,\n});\n\n// API voor interactie met de store\nexport const formDataStore = {\n  // Zet een veldwaarde\n  setField(name: string, value: string) {\n    state.data[name] = value;\n  },\n  // Haal alle veldwaarden op\n  getAllFields(): { [key: string]: string } {\n    return state.data;\n  },\n  // Zet de status van een stap (voegt toe of werkt bij)\n  setStepStatus(step: number, status: StepStatus) {\n    // Zoek of de stap al bestaat in de array\n    const index = state.stepStatus.findIndex(s => s.step === step);\n    if (index > -1) {\n      // Als de stap bestaat: werk de status bij\n      state.stepStatus = state.stepStatus.map(s => (s.step === step ? { ...s, status } : s));\n    } else {\n      // Als de stap nog niet bestaat: voeg toe aan de array\n      state.stepStatus = [...state.stepStatus, { step, status }];\n    }\n  },\n\n  // Haal de status van een specifieke stap op\n  getStepStatus(step: number): StepStatus | undefined {\n    return state.stepStatus.find(s => s.step === step)?.status;\n  },\n  // Haal alle stapstatussen op\n  getAllStepStatus(): StepStatusMap[] {\n    return state.stepStatus;\n  },\n  // Zet de huidige stap\n  setCurrentStep(step: number) {\n    state.currentStep = step;\n  },\n  // Haal de huidige stap op\n  getCurrentStep(): number {\n    return state.currentStep;\n  },\n};\n\n// Exporteer de state voor directe toegang in componenten\nexport { state };\n",":host {\n  display: block;\n  margin-top: auto;\n  /* Variables */\n  --primary-button-hover: #00729f;\n  --secondary-button-hover: #99cae8;\n  --disabled-button-text-color: #999999;\n  --font-size-base: 1.125rem;\n  --line-height-base: 1.625rem;\n}\n\n.nav-buttons {\n  display: flex;\n  justify-content: flex-end;\n  gap: 1rem;\n  padding: 2rem 20%;\n  background-color: white;\n}\n\n.primary-button,\n.secondary-button {\n  min-width: 7rem;\n  padding: 1rem;\n  font-size: var(--font-size-base);\n  line-height: var(--line-height-base);\n  cursor: pointer;\n  border: none;\n  outline: none;\n}\n\n.primary-button:focus-visible,\n.secondary-button:focus-visible {\n  outline: 2px dashed black;\n  outline-offset: 1px;\n}\n\n.primary-button:focus-visible {\n  background-color: var(--primary-button-hover);\n}\n\n.secondary-button:focus-visible {\n  background-color: var(--secondary-button-hover);\n}\n.primary-button {\n  background-color: #007bc7;\n  color: white;\n}\n\n.primary-button:hover {\n  background-color: var(--primary-button-hover);\n}\n\n.primary-button:active {\n  background-color: #004977;\n}\n.primary-button:disabled {\n  background-color: #e6e6e6;\n  color: var(--disabled-button-text-color);\n  cursor: default;\n}\n\n.secondary-button {\n  background-color: #cce4f3;\n  color: black;\n}\n\n.secondary-button:hover {\n  background-color: var(--secondary-button-hover);\n}\n\n.secondary-button:active {\n  background-color: #007bc7;\n}\n.secondary-button:disabled {\n  background-color: #f3f3f3;\n  color: var(--disabled-button-text-color);\n  cursor: default;\n}\n\n@media screen and (max-width: 768px) {\n  .nav-buttons {\n    padding: 1rem; /* Reduce padding for navigation buttons */\n  }\n}\n","import { Component, h, Prop } from '@stencil/core';\nimport { formDataStore } from '../../store/store-form-data';\n\n@Component({\n  tag: 'form-navigation',\n  styleUrl: 'form-navigation.css',\n  shadow: true,\n})\nexport class FormNavigation {\n  // Huidige stap (wordt als prop doorgegeven)\n  @Prop() currentStep: number;\n  // Hoogste stapnummer\n  @Prop() maxStep: number;\n  // Of de volgende knop uitgeschakeld moet zijn\n  @Prop() disableNext: boolean;\n  // Handler voor het versturen van het formulier\n  @Prop() onSubmit: () => void;\n\n  // Zet de huidige stap in de store\n  private goToStep(step: number) {\n    formDataStore.setCurrentStep(step);\n  }\n\n  render() {\n    // Controleer of dit de laatste stap is\n    const isLastStep = this.currentStep === this.maxStep;\n\n    return (\n      <div class=\"nav-buttons\">\n        {/* Vorige knop */}\n        <button class=\"secondary-button\" type=\"button\" onClick={() => this.goToStep(this.currentStep - 1)} disabled={this.currentStep === 0}>\n          Vorige\n        </button>\n        {/* Volgende of versturen knop */}\n        <button class=\"primary-button\" type=\"button\" onClick={() => (isLastStep ? this.onSubmit() : this.goToStep(this.currentStep + 1))} disabled={this.disableNext}>\n          {isLastStep ? 'Versturen' : 'Volgende'}\n        </button>\n      </div>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n","import { Component, h, Prop, Listen, Element } from '@stencil/core';\nimport { formDataStore, state } from '../../store/store-form-data';\n\n@Component({\n  tag: 'form-step',\n  styleUrl: 'form-step.css',\n  shadow: true,\n})\nexport class FormStep {\n  // Stapnummer van deze stap\n  @Prop() step: number;\n  // Referentie naar het element\n  @Element() el: HTMLElement;\n\n  // Luister naar wijzigingen in formulierwaarden en sla geldige waarden op in de store\n  @Listen('valueChanged')\n  handleValueChanged(event: CustomEvent<{ name: string; value: string; valid: boolean }>) {\n    const { name, value, valid } = event.detail;\n    if (valid) {\n      formDataStore.setField(name, value);\n    }\n  }\n\n  render() {\n    // Render alleen als dit de huidige stap is\n    if (this.step !== state.currentStep) return null;\n\n    // Focus op het eerste veld in de stap\n    setTimeout(() => {\n      const child = this.el.querySelector('form-field');\n      if (child?.shadowRoot) {\n        const input = child.shadowRoot.querySelector('input');\n        input?.focus();\n      }\n    }, 0);\n\n    return (\n      <div class=\"form-step\">\n        {/* Render de inhoud van de stap */}\n        <slot></slot>\n      </div>\n    );\n  }\n}\n",":host {\n  display: block;\n  box-sizing: border-box; /* Ensures padding is included in height */\n  margin: 0;\n  padding: 0;\n  height: 100vh;\n  /* Variables */\n  --font-size-base: 1.125rem;\n  --line-height-base: 1.625rem;\n  --element-background: white;\n  /* font-family: 'ROsanswebtextregular'; */\n}\n\nh1,\nh2 {\n  margin: 0;\n}\n\nh3 {\n  margin-top: 0;\n}\n\nheader {\n  display: flex;\n  flex-direction: column;\n  background-color: var(--element-background);\n  padding: 0rem 20% 2rem 20%;\n  box-shadow: 0px 0px 4px -2px rgba(0, 0, 0, 0.4);\n}\n\nheader img {\n  width: 550px; /* Adjust the width as needed */\n  max-width: 100%;\n  justify-self: center;\n  align-self: center;\n}\n\nform {\n  flex-grow: 1;\n}\n.form-stepper {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n}\n\n.container {\n  display: flex;\n  justify-content: start;\n  gap: 2rem;\n  padding: 2rem 20%;\n  height: 100%;\n}\n\n.summary {\n  background-color: var(--element-background);\n  font-size: var(--font-size-base);\n  line-height: var(--line-height-base);\n  text-wrap: wrap;\n  width: 100%;\n  height: 100%;\n}\n.summary ul {\n  padding: 0;\n  margin: 0;\n}\n\n.summary li {\n  list-style: none; /* Remove default list styling */\n  padding: 0.25rem 0; /* Add some padding for spacing */\n}\n\n.summary-item {\n  display: grid;\n  justify-content: space-between;\n  gap: 2rem;\n  grid-template-columns: 10rem 1fr; /* Fixed width for labels, flexible width for values */\n  align-items: start; /* Align items vertically */\n}\n\n.summary-content {\n  padding: 2rem;\n}\n\n.confirmation {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  text-align: center;\n}\n\n.confirmation img {\n  width: 50px; /* Adjust the size of the checkmark */\n  height: auto;\n  margin-bottom: 1rem; /* Space between image and text */\n}\n@media screen and (max-width: 768px) {\n  header {\n    padding: 0 1rem 1rem 1rem; /* Reduce padding for smaller screens */\n  }\n  .container,\n  .stepper-status,\n  .summary-content {\n    padding: 1rem; /* Reduce padding for smaller screens */\n  }\n\n  .container {\n    gap: 1rem;\n  }\n\n  .summary-item {\n    grid-template-columns: 1fr; /* Stack items vertically */\n    gap: 0.125rem; /* Reduce gap for smaller screens */\n  }\n\n  .nav-buttons {\n    padding: 1rem; /* Reduce padding for navigation buttons */\n  }\n\n  .container {\n    flex-direction: column; /* Stack form and summary vertically */\n  }\n}\n","// Importeer Stencil tools en de store\nimport { Component, h, State, Listen } from '@stencil/core';\nimport { formDataStore, state } from '../../store/store-form-data';\n\n// Mapping van stappen naar verplichte velden\nconst stepFieldsMap = {\n  0: ['Naam', 'Email'],\n  1: ['Mobiele nummer', 'Werkervaring'],\n  2: ['Woonplaats', 'Vervoersmiddel'],\n  3: [],\n};\n\n// Bepaal het hoogste stapnummer\nconst maxStep = Object.keys(stepFieldsMap).length - 1;\n\n@Component({\n  tag: 'form-stepper',\n  styleUrl: 'form-stepper.css',\n  shadow: true,\n})\nexport class FormStepper {\n  // Houdt bij welke velden geldig zijn\n  @State() validationStatus: { [key: string]: boolean } = {};\n  // Houdt de ingevulde formuliervelden bij\n  @State() formData: { [key: string]: string } = {};\n  @State() submitted: boolean = false;\n\n  // Luister naar wijzigingen in formuliervelden\n  @Listen('valueChanged')\n  handleFieldChange(event: CustomEvent<{ name: string; valid: boolean; value?: string; minlength?: number }>) {\n    const { name, valid, value, minlength } = event.detail;\n    // Alleen valideren als de waarde lang genoeg is, of als er geen minlength is\n    if (typeof minlength === 'number' && value && value.length < minlength) {\n      this.validationStatus = { ...this.validationStatus, [name]: false };\n    } else {\n      this.validationStatus = { ...this.validationStatus, [name]: valid && (!value || value !== '0') };\n    }\n    this.formData = formDataStore.getAllFields();\n  }\n\n  // Handler voor het versturen van het formulier\n  private handleSubmit = () => {\n    this.submitted = true;\n  };\n\n  // C`ontroleer of alle verplichte velden van de huidige stap geldig zijn\n  private isCurrentStepValid(): boolean {\n    const requiredFields = stepFieldsMap[state.currentStep];\n    return requiredFields.every(name => this.validationStatus[name]);\n  }\n\n  // Render het formulier en de stappen\n  render() {\n    if (this.submitted) {\n      return (\n        <div class=\"confirmation\">\n          <img src=\"assets/Checkmark.svg\" alt=\"Checkmark\" />\n          <h2>Succesvol verzonden!</h2>\n        </div>\n      );\n    }\n\n    return (\n      <div class=\"form-stepper\">\n        {/* Header met afbeelding en titels */}\n        <header>\n          <img src=\"assets/Vaandel.png\" alt=\"Vaandel\" />\n          <h1>Form Stepper Component</h1>\n          <h2>Algemeen vooronderzoek</h2>\n        </header>\n        {/* Container voor de stepper en het formulier */}\n        <div class=\"container\">\n          {/* Stap-indicator */}\n          <stepper-status></stepper-status>\n          {/* Formulier met stappen */}\n          <form class=\"form\">\n            {/* Stap 0 */}\n            <form-step step={0}>\n              <form-field\n                name=\"Naam\"\n                label=\"Voor- en achternaam\"\n                type=\"text\"\n                value=\"\"\n                placeholder=\"Voor- en achternaam\"\n                required\n                aria-required=\"true\"\n                error=\"Voer alstublieft een geldige naam in.\"\n                minlength={2}\n                maxlength={30}\n              ></form-field>\n              <form-field\n                name=\"Email\"\n                label=\"Email\"\n                type=\"email\"\n                value=\"\"\n                placeholder=\"Email\"\n                required\n                aria-required=\"true\"\n                error=\"Voer alstublieft een geldig emailadres in.\"\n                minlength={2}\n                maxlength={30}\n              ></form-field>\n            </form-step>\n            {/* Stap 1 */}\n            <form-step step={1}>\n              <form-field\n                name=\"Mobiele nummer\"\n                label=\"Mobiele nummer\"\n                pattern=\"[0-9]+\"\n                type=\"tel\"\n                value=\"\"\n                placeholder=\"Mobiele nummer\"\n                required\n                aria-required=\"true\"\n                error=\"Voer alstublieft een geldig mobiel nummer in.\"\n                minlength={2}\n                maxlength={10}\n              ></form-field>\n              <form-field\n                name=\"Werkervaring\"\n                label=\"Aantal jaar werkervaring\"\n                inputmode=\"numeric\"\n                pattern=\"[0-9]+\"\n                type=\"text\"\n                value=\"\"\n                placeholder=\"Aantal jaar werkervaring\"\n                required\n                aria-required=\"true\"\n                error=\"Voer alstublieft een geldig aantal jaren in.\"\n                minlength={1}\n                maxlength={2}\n              ></form-field>\n            </form-step>\n            {/* Stap 2 */}\n            <form-step step={2}>\n              <form-field\n                name=\"Woonplaats\"\n                label=\"Woonplaats\"\n                type=\"text\"\n                value=\"\"\n                placeholder=\"Woonplaats\"\n                required\n                aria-required=\"true\"\n                error=\"Voer alstublieft een geldige woonplaats in.\"\n                minlength={2}\n                maxlength={15}\n              ></form-field>\n              <form-field\n                label=\"Vervoersmiddel\"\n                name=\"Vervoersmiddel\"\n                type=\"select\"\n                required={true}\n                error=\"Selecteer alstublieft een vervoersmiddel.\"\n                options={[\n                  { value: '0', label: '----- Selecteer optie -----' },\n                  { value: 'Openbaar vervoer', label: 'Openbaar vervoer' },\n                  { value: 'Eigen vervoer', label: 'Eigen vervoer' },\n                ]}\n              ></form-field>\n            </form-step>\n            {/* Stap 3: Samenvatting */}\n            <form-step step={3} class={state.currentStep === 3 ? 'summary' : ''}>\n              <div class=\"summary-content\">\n                <h3>Samenvatting</h3>\n                <ul>\n                  {Object.entries(this.formData).map(([key, value]) => (\n                    <li class=\"summary-item\">\n                      <strong>{key}:</strong>\n                      <span>{value}</span>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </form-step>\n          </form>\n        </div>\n        {/* Navigatieknoppen onderaan */}\n        <form-navigation currentStep={state.currentStep} maxStep={maxStep} disableNext={!this.isCurrentStepValid()} onSubmit={this.handleSubmit}></form-navigation>\n      </div>\n    );\n  }\n}\n",":host {\n  display: block;\n  --font-size-base: 1.125rem;\n  --line-height-base: 1.625rem;\n  --font-size-small: 0.875rem;\n  --line-height-small: 1.125rem;\n  --status-active-color: #007bc7;\n  --status-completed-color: #39870b;\n}\n@font-face {\n  font-family: 'ROsanswebtextregular';\n  src: url('../../assets/ROsanswebtextbold.woff') format('woff');\n  font-weight: bold;\n  font-style: normal;\n}\n\n.stepper-status {\n  display: flex;\n  flex-direction: column; /* Stack steps vertically */\n  gap: 2rem; /* Space between step containers */\n  background-color: white;\n  padding: 2rem;\n}\n\n.step-container {\n  display: flex;\n  flex-direction: row; /* Align step circle and label horizontally */\n  align-items: center; /* Center items vertically */\n  gap: 1rem; /* Space between the circle and the label */\n}\n\n.active,\n.inactive,\n.completed {\n  font-size: var(--font-size-small);\n  line-height: var(--line-height-small);\n  aspect-ratio: 1;\n  width: 2rem;\n  height: 2rem;\n  text-align: center;\n  box-sizing: border-box;\n  aspect-ratio: 1;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.step-info {\n  display: flex;\n  flex-direction: column; /* Stack step info vertically */\n}\n\n.time-indication {\n  font-size: var(--font-size-small);\n  line-height: var(--line-height-small);\n}\n.step-label {\n  font-size: var(--font-size-base);\n  line-height: var(--line-height-base);\n}\n\n.current-label {\n  font-weight: bolder;\n}\n\n.active {\n  color: rgb(255, 255, 255);\n  background-color: var(--status-active-color);\n  border: 2px solid var(--status-active-color);\n\n  font-weight: bold;\n}\n\n.inactive {\n  border: 2px solid black;\n}\n\n.completed {\n  color: white;\n  background-color: var(--status-completed-color);\n  border: 2px solid var(--status-completed-color);\n}\n\n.completed::before {\n  content: '✓';\n  font-size: 1.3rem;\n  line-height: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n}\n\n@media screen and (max-width: 768px) {\n  .stepper-status {\n    padding: 1rem; /* Reduce padding for smaller screens */\n    gap: 1rem; /* Reduce gap between steps */\n  }\n}\n","import { Component, h } from '@stencil/core';\nimport { state } from '../../store/store-form-data';\n\n@Component({\n  tag: 'stepper-status',\n  styleUrl: 'stepper-status.css',\n  shadow: true,\n})\nexport class StepperStatus {\n  render() {\n    // Stappen, labels en tijdsindicaties voor de stepper\n    const steps = [1, 2, 3, 4];\n    const stepLabels = ['Persoonlijke informatie', 'Relevante gegevens', 'Reizen en vervoer', 'Overzicht'];\n    const stepTimes = ['<1 min', '<1 min', '<1 min', ''];\n\n    return (\n      <div class=\"stepper-status\">\n        {steps.map((step, index) => {\n          // Bepaal de status-klasse voor deze stap\n          let stepClass = 'inactive';\n          if (index < state.currentStep) {\n            stepClass = 'completed';\n          } else if (index === state.currentStep) {\n            stepClass = 'active';\n          }\n\n          return (\n            <div class=\"step-container\">\n              {/* Stapnummer of leeg als voltooid */}\n              <div class={stepClass}>{stepClass === 'completed' ? '' : step}</div>\n              <div class=\"step-info\">\n                {/* Label van de stap */}\n                <span class={`step-label ${index === state.currentStep ? 'current-label' : ''}`}>{stepLabels[index]}</span>\n                {/* Tijdindicatie indien aanwezig */}\n                {stepTimes[index] && <span class=\"time-indication\">{stepTimes[index]}</span>}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}